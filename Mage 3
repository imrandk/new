// Replace this with the actual selector for your button
const buttonSelector = '#zvksow01xfkaofl1Xxz3ccff8';

// Function to click the button
function clickButton() {
  const button = document.querySelector(buttonSelector);
  if (button) {
    button.click();
  } else {
    console.error('Button not found');
  }
}

// Click the button every 3 seconds (3000 milliseconds)
setInterval(clickButton, 3000);




function downloadImage() {
    // Retrieve processed URLs from local storage or initialize an empty array
    let processedUrls = JSON.parse(localStorage.getItem('processedUrls')) || [];

    // Select the image element using the provided CSS selector
    const image = document.querySelector('.mantine-focus-auto.m_87cf2631 img'); // Adjust the selector as needed

    // Check if the image element exists
    if (image) {
        const imageUrl = image.src;

        // Check if the URL has already been processed
        if (!processedUrls.includes(imageUrl)) {
            const filename = imageUrl.substring(imageUrl.lastIndexOf('/') + 1); // Extract filename from URL

            // Fetch the image data
            fetch(imageUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.blob();
                })
                .then(blob => {
                    // Create a temporary anchor element to trigger the download
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = filename;
                    link.style.display = 'none';

                    // Append the anchor element to the document body
                    document.body.appendChild(link);

                    // Trigger the download
                    link.click();

                    // Clean up by removing the anchor element
                    document.body.removeChild(link);

                    // Add the URL to the list of processed URLs
                    processedUrls.push(imageUrl);

                    // Save the updated list of processed URLs to local storage
                    localStorage.setItem('processedUrls', JSON.stringify(processedUrls));
                })
                .catch(error => { /* handle error */ });
        } else {
            // Image has already been downloaded
        }
    } else {
        // Image element not found
    }
}

// Example usage of the function
downloadImage();


// Call the function initially
downloadImage();

// Call the function every 2 second (2000 milliseconds)
setInterval(downloadImage, 2000);
